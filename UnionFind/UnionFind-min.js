class UnionFind{constructor(){this.g={}}same(n,t){if(this.g[n]){let t=[];while(this.g[n][0]!=n)t.push(n),n=this.g[n][0];t.forEach(t=>this.g[t][0]=n)}if(this.g[t]){let n=[];while(this.g[t][0]!=t)n.push(t),t=this.g[t][0];n.forEach(n=>this.g[n][0]=t)}return n===t}join(n,t){if(this.g[n]){let t=[];while(this.g[n][0]!=n)t.push(n),n=this.g[n][0];t.forEach(t=>this.g[t][0]=n)}else this.g[n]=[n,0];if(this.g[t]){let n=[];while(this.g[t][0]!=t)n.push(t),t=this.g[t][0];n.forEach(n=>this.g[n][0]=t)}else this.g[t]=[t,0];this.g[n][1]>this.g[t][1]?(this.g[t][0]=n,this.g[n][1]=Math.max(this.g[n][1],this.g[t][1]+1)):(this.g[n][0]=t,this.g[t][1]=Math.max(this.g[t][1],this.g[n][1]+1))}}
